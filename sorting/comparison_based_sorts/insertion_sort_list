from typing import Optional
from linked_list import ListNode, LinkedList


class Solution:
    def insertionSortList(self, head: Optional[ListNode]) -> Optional[ListNode]:
        lst = []
        node = head
        while node:
            lst.append(node.val)
            node = node.next

        
        for i in range(1, len(lst)):
            current_idx = i

            while current_idx > 0 and lst[current_idx] < lst[current_idx-1]:
                lst[current_idx-1], lst[current_idx] = lst[current_idx], lst[current_idx-1]
                current_idx -= 1
        
        
        head = ListNode(lst[0])
        current_node = head

        for value in lst[1:]:
            current_node.next = ListNode(value)
            current_node = current_node.next
        
        return head

head = [4,2,1,3]
head = LinkedList(head).head

head.display()

sol = Solution()
head = sol.insertionSortList(head)
head.display()